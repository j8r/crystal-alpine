From 05661341dfb737aa75927e35b1626bc4c658a63a Mon Sep 17 00:00:00 2001
From: Julien Portalier <julien@portalier.com>
Date: Mon, 8 Feb 2016 17:56:33 +0100
Subject: [PATCH 2/5] Compile against musl-libc (Errno)

---
 src/errno.cr | 20 ++++++++++++++++----
 1 file changed, 16 insertions(+), 4 deletions(-)

diff --git a/src/errno.cr b/src/errno.cr
index 92e7a4f..e05f7e7 100644
--- a/src/errno.cr
+++ b/src/errno.cr
@@ -1,7 +1,11 @@
 lib LibC
   ifdef linux
-    @[ThreadLocal]
-    $errno : Int
+    ifdef musl
+      fun __errno_location : Int*
+    else
+      @[ThreadLocal]
+      $errno : Int
+    end
   elsif darwin
     fun __error : Int*
   end
@@ -215,7 +219,11 @@ class Errno < Exception
   # Returns the value of libc's errno.
   def self.value
     ifdef linux
-      LibC.errno
+      ifdef musl
+        LibC.__errno_location.value
+      else
+        LibC.errno
+      end
     elsif darwin
       LibC.__error.value
     end
@@ -224,7 +232,11 @@ class Errno < Exception
   # Sets the value of libc's errno.
   def self.value=(value)
     ifdef linux
-      LibC.errno = value
+      ifdef musl
+        LibC.__errno_location.value = value
+      else
+        LibC.errno = value
+      end
     elsif darwin
       LibC.__error.value = value
     end
-- 
2.6.4

